version: "3.8"

networks:
  web-network:
    driver: 'bridge'

services:
  nginx:
    build:
      args:
        - NGINX_VERSION=${NGINX_VERSION}
        - http_proxy
        - https_proxy
        - no_proxy
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: on-failure
    depends_on:
      - php-fpm
    networks:
      - web-network
    container_name: ${PROJECT_NAME}-nginx

  php-fpm:
    build:
      args:
        PHP_VERSION: $PHP_VERSION
        PHPREDIS_VERSION: $PHPREDIS_VERSION
        APP_ENV: $APP_ENV
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
      target: ${APP_ENV}
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    restart: on-failure
    command: sh -c 'composer install --no-interaction --optimize-autoloader && php-fpm'
    networks:
      - web-network
    container_name: ${PROJECT_NAME}-php

  postgres:
    build:
      args:
        $POSTGRES_VERSION: $POSTGRES_VERSION
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    restart: on-failure
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - web-network
    container_name: ${PROJECT_NAME}-postgres

  redis:
    image: "redis:${REDIS_IMAGE_VERSION}"
    command: |
      bash -c "redis-server"
    networks:
      - web-network
    container_name: ${PROJECT_NAME}-redis

  redis-webui:
    build:
      context: ./docker/redis-webui
    environment:
      - ADMIN_USER=${REDIS_WEBUI_USERNAME}
      - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
      - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
      - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
    networks:
      - web-network
    depends_on:
      - redis

  maildev:
    build: ./docker/maildev
    networks:
      - web-network
